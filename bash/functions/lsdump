#!/bin/bash

function lsdump() {
    files="$@"

    if [ -z "$files" ]; then
        echo "Usage: $FUNCNAME <file> [<file> ...]"
        return
    fi

    for i in $files; do
        if [ -e "$i" ]; then
            _lsdump_print_command "file"

            file --brief "$i" | replace 's/^\s*(.+)$/  $1/'

            _lsdump_print_command "stat"

            stat -x "$i" | replace 's/^\s*(.+)$/  $1/'

            if [ -x "$(which xattr 2>/dev/null)" ]; then
                attributes=$(xattr "$i")

                if [ -n "$attributes" ]; then
                    _lsdump_print_command "xattr"

                    for j in $attributes; do
                        printf "  $j\n"
                        xattr -p "$j" "$i" | replace 's/^\s*(.+)$/    $1/'
                    done
                fi
            fi

            if [ -x "$(which hfsdata 2>/dev/null)" ]; then
                _lsdump_print_command "hfsdata"

                printf "  Type: %s\n" $(hfsdata -T "$i" 2>/dev/null)
                printf "  Creator: %s\n" $(hfsdata -C "$i" 2>/dev/null)
                printf "  Kind: %s\n" $(hfsdata -k "$i" 2>/dev/null)
                printf "  Label: %s (%u)\n" $(hfsdata -L "$i" 2>/dev/null) $(hfsdata -l "$i" 2>/dev/null)
                printf "  Comment: \"%s\"\n" $(hfsdata -o "$i" 2>/dev/null)
            fi
        else
            echo "$FUNCNAME: $i: No such file or directory"
        fi
    done
}

function _lsdump_print_command() {
    b="\e[1;35m"
    n="\e[0m"

    printf "$b%s$n\n" "$1"
}

