#!/usr/bin/perl -w

use strict;
use CLI;
use CLI::File;

my @files = @ARGV;

CLI::usage("<file> [<file> ...]") if @files == 0;

for my $path (@files) {
    lsdump($path);
}



sub lsdump {
    my $path = shift;

    if(!CLI::File::isfile($path)) {
        CLI::error("$path: No such file or directory");
        return;
    }

    printcommand("lsdump", [CLI::absolutepath($path)]);

    if(CLI::canrun("file")) {
        my @output = CLI::run(["file", "--brief", $path]);

        printcommand("file", \@output);
    }

    if(CLI::canrun("du")) {
        my @output = CLI::run(["du", "-hs", $path]);

        foreach my $line (@output) {
            $line =~ s/\s+.+//g;
        }

        printcommand("du", \@output);
    }

    if(CLI::canrun("stat")) {
        my @output = CLI::run(["stat", "-x", $path]);

        printcommand("stat", \@output);
    }

    if(CLI::canrun("xattr")) {
        my @output = CLI::run(["xattr", "-lx", $path]);

        printcommand("xattr", \@output);

        my $quarantine = CLI::run(["xattr", "-p", "com.apple.quarantine", $path]);

        if($quarantine) {
            if($quarantine =~ /^(.+?);(.+?);(.+?);(.+?)$/) {
                my $databasepath = CLI::pathbyappendingpathcomponents(CLI::homepath(), "Library", "Preferences", "com.apple.LaunchServices.QuarantineEventsV2");
                my @result = CLI::run(["sqlite3", "-list", "-noheader", "-separator", ";", $databasepath, "select LSQuarantineAgentName, LSQuarantineDataURLString, datetime(LSQuarantineTimeStamp + 978307200, 'unixepoch') from LSQuarantineEvent where LSQuarantineEventIdentifier = '$4';"]);

                foreach my $line (@result) {
                    if($line =~ /^(.+?);(.+?);(.+?)$/) {
                        printcommand("quarantine", ["Application: $1", "URL: $2", "Date: $3"]);
                    }
                }
            }
        }
    }

    if(CLI::canrun("hfsdata")) {
        my $type = CLI::run(["hfsdata", "-T", $path]) || "";
        my $creator = CLI::run(["hfsdata", "-C", $path]) || "";
        my $kind  = CLI::run(["hfsdata", "-k", $path]) || "";
        my $labelname  = CLI::run(["hfsdata", "-L", $path]) || "";
        my $labelcode  = CLI::run(["hfsdata", "-l", $path]) || "0";
        my $comment  = CLI::run(["hfsdata", "-o", $path]) || "";

        printcommand("hfsdata", ["Type: \"$type\"", "Creator: \"$creator\"", "Kind: \"$kind\"", "Label: $labelname ($labelcode)", "Comment: \"$comment\""]);
    }
}

sub printcommand {
    my $command = shift;
    my $lines = shift;

    foreach my $line (@{$lines}) {
        println CLI::coloredstring(CLI::justifiedstring($command, 18), "magenta,bold"), CLI::trimmedstring($line);

        $command = "";
    }
}
