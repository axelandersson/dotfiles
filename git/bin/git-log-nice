#!/usr/bin/perl -w

use strict;
use File::Basename;
use Term::ReadKey;
use Term::ANSIColor qw(colorstrip);

my $BINARY = basename($0);
my $FORMAT = shift @ARGV;

die "Usage: $BINARY short|long|graph [<git-log options> ...]\n" unless $FORMAT && $FORMAT =~ /^(short|long|graph)$/;

my $maxwidth = 0;
my $maxcount = 10;
my $pager = `git config --get core.pager` || $ENV{"PAGER"} || "less";
my $format = "";
my @flags = ("--perl-regexp");

if(@ARGV == 1 && $ARGV[0] =~ /^[a-f0-9]+$/) {
    $maxcount = 1;
}

if($FORMAT eq "short" || $FORMAT eq "long") {
    $format = "<<<STARTENTRY>>>%n%C(magenta)%an%C(reset)%C(auto)%d%C(reset) %ar%n%C(cyan)%h%C(reset) %C(white bold)%s%C(reset)%n<<<STARTBODY>>>%n%b%n<<<STOPBODY>>>";

    if($FORMAT eq "short") {
        push(@flags, "--stat");
    } else {
        push(@flags, "--patch");
    }
}
elsif($FORMAT eq "graph") {
    $maxwidth = (GetTerminalSize())[0];
    $maxcount = 20;
    $format = "%C(magenta)%an%C(reset)%C(auto)%d%C(reset) %ar %C(cyan)%h%C(reset) %C(white bold)%s%C(reset)";

    push(@flags, "--graph");
    push(@flags, "--all");
    push(@flags, "--simplify-by-decoration");
}

my $command = "git --no-pager log --max-count=$maxcount --pretty=tformat:'$format' " . join(" ", @flags) . " " . join(" ", @ARGV);
my @lines = ();
my $firstentry = 1;
my $inbody = 0;

open(FH, "-|", $command) or die "$BINARY: $!\n";

while(my $line = <FH>) {
    chomp($line);

    if($line eq "<<<STARTENTRY>>>") {
        push(@lines, "") unless $firstentry;

        $firstentry = 0;
        next;
    }

    if($line eq "<<<STARTBODY>>>") {
        $inbody = 1;
        next;
    }

    if($line eq "<<<STOPBODY>>>") {
        $inbody = 0;
        next;
    }

    if($line =~ /\d+ files? changed/) {
        next;
    }

    if($line =~ /\w+/) {
        if($inbody) {
            $line = "        \033[1;37m$line\033[0m";
        }

        if($maxwidth > 0) {
            while(length(colorstrip($line)) > $maxwidth) {
                chop($line);
            }
        }

        push(@lines, $line);
    }
}

close(FH);

open(FH, "|-", $pager) or die "$BINARY: $!\n";

foreach my $line (@lines) {
    print FH "$line\n";
}

close(FH);
