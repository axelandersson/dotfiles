#!/usr/bin/env perl -w

use strict;
use CLI;
use CLI::Git;
use CLI::File;

my $options = CLI::options("raw", "blame");
my $file = shift @ARGV;
my $branch = shift @ARGV || CLI::Git::branch();

CLI::usage("[--raw|--blame] <file> [<branch>]") if $options->{"help"} || !CLI::File::isfile($file) || !CLI::Git::isbranch($branch);

if($options->{"raw"}) {
    my @output = CLI::Git::showfile($file, $branch);

    CLI::Git::runpager(\@output);
}
elsif($options->{"blame"}) {
    my @input = CLI::Git::blame($file, $branch);

    my @lines = map { $_->{"line"} } @input;
    my @formattedlines = CLI::run("cat-highlight", { "input" => \@lines } );

    my @output;
    my $previouscommit = "";
    my $commitlength;
    my $index = 0;

    foreach my $line (@formattedlines) {
        my $blame = $input[$index++];
        my $info = "";

        if($blame->{"commit"} ne $previouscommit) {
            my $author = CLI::justifiedstring($blame->{"author"}, 12, 12);
            my $date = CLI::formattedtime($blame->{"author-time"}, "%Y-%m-%d");
            my $commit = $blame->{"commit"};

            if($commitlength) {
                $commit = CLI::justifiedstring($commit, $commitlength, $commitlength);
            } else {
                $commit = CLI::Git::shortcommit($commit);
                $commitlength = length($commit);
            }

            $info = CLI::Git::blameauthorstring($author) . CLI::Git::blamedatestring(" " . $date) . CLI::Git::blamecommitstring(" " . $commit);
        }

        $line = CLI::terminalwidthstring($line, CLI::stringwidth($info));

        push(@output, $line . $info);

        $previouscommit = $blame->{"commit"};
    }

    CLI::Git::runpager(\@output);
}
else {
    my @output = CLI::Git::showfile($file, $branch);

    CLI::Git::runpager(\@output, { "pager" => "less-highlight" });
}
