#!/usr/bin/env perl

use strict;
use warnings;
use CLI;
use CLI::Git;

my $STASHMESSAGE = "cli-autostash";

my $options = CLI::options("track");
my $branch = shift @ARGV || CLI::Git::defaultbranch();

CLI::usage("[--track] [<branch>|-]") if $options->{"help"};

if($branch eq "-") {
    $branch = CLI::Git::configget("cli.branchswitch.lastbranch", $CLI::Git::CONFIGLOCAL);
} elsif(!CLI::Git::isbranch($branch)) {
    $branch = "origin/$branch";
}

CLI::asserttrue(CLI::Git::isbranch($branch), "$branch is not a branch");

my $previousbranch = CLI::Git::branch();

if($branch eq $previousbranch) {
    exit(0);
}

my @arguments = ($branch);

if($options->{"track"}) {
    push(@arguments, "--track");
}

if(CLI::Git::haschanges()) {
    CLI::println("There are changes on $previousbranch:");

    CLI::run(["git", "status"]);

    my $saveanswer = CLI::ask("Merge/stash/abort? [msa]");

    if($saveanswer =~ /^(m|merge)$/i) {
        push(@arguments, "--merge");
    } elsif($saveanswer =~ /^(s|stash)$/i) {
        CLI::run(["git", "stash", "push", "--include-untracked", "-m", $STASHMESSAGE]);
    } else {
        exit(0);
    }
}

CLI::run(["git", "checkout", @arguments]);

CLI::Git::configset("cli.branchswitch.lastbranch", $previousbranch, $CLI::Git::CONFIGLOCAL);

foreach my $stash (CLI::Git::stashes($branch)) {
    if($stash->{"message"} eq $STASHMESSAGE) {
        my $restoreanswer = CLI::ask("Restore autostashed changes on $branch? [y]");

        if($restoreanswer =~ /^(|y|yes)$/i) {
            CLI::run(["git", "stash", "pop", $stash->{"name"}]);
        }

        last;
    }
}
