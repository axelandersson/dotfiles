#!/usr/bin/env perl

use strict;
use warnings;
use CLI;
use CLI::Git;

my $STASHMESSAGE = "cli-autostash";

my $options = CLI::options();
my $branch = shift @ARGV || "master";

CLI::usage("[<branch>|-]") if $options->{"help"};

if($branch eq "-") {
    $branch = CLI::Git::configget("cli.branchswitch.lastbranch", $CLI::Git::CONFIGLOCAL);
} else {
    CLI::asserttrue(CLI::Git::isbranch($branch), "$branch is not a branch");
}

my $previousbranch = CLI::Git::branch();

if($branch eq $previousbranch) {
    exit(0);
}

if(CLI::Git::haschanges()) {
    my $saveanswer = CLI::ask("There are changes on $previousbranch - autostash? [y]");

    if($saveanswer =~ /^(|y|yes)$/i) {
        CLI::run(["git", "stash", "push", "--include-untracked", "-m", $STASHMESSAGE]);
    }
}

CLI::run(["git", "checkout", $branch]);

CLI::Git::configset("cli.branchswitch.lastbranch", $previousbranch, $CLI::Git::CONFIGLOCAL);

foreach my $stash (CLI::Git::stashes($branch)) {
    if($stash->{"message"} eq $STASHMESSAGE) {
        my $restoreanswer = CLI::ask("Restore autostashed changes? [y]");

        if($restoreanswer =~ /^(|y|yes)$/i) {
            CLI::run(["git", "stash", "pop", $stash->{"name"}]);
        }

        last;
    }
}
